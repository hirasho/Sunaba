#定数作成
定数 空白 → 8
定数 マス目列 → 100
定数 画面 → 60000

メモリ[55001] → 1 #手加減オフ
パターンを前もって作っておく()
マス目の絵を用意する()
マス目列状態を最初の状態にする()
壁と底を描く()

縦 → 1
横 → 5 
回転 → 0
種類 → 0
落下カウント → 0
時刻 → 0 #種類をランダムに見せかけるために使う
前左 → メモリ[50006]
前右 → メモリ[50007]
前上 → メモリ[50004]
前下 → メモリ[50005]
1 なかぎり #無限
   メモリ[50009] なら #ゲームを最初からやりなおし
      縦 → 1
      横 → 5
      回転 → 0
      種類 → 0
      落下カウント → 0
      マス目列状態を最初の状態にする()
      壁と底を描く()
   今左 → メモリ[50006]
   今右 → メモリ[50007]
   今上 → メモリ[50004]
   今下 → メモリ[50005]

   #移動量
   横移動量 → 0
   縦移動量 → 0
   回転量 → 0
   (前左 = 0) × (今左 = 1) なら
      横移動量 → -1
   (前右 = 0) × (今右 = 1) なら
      横移動量 → 1
   (前上 = 0) × (今上 = 1) なら
      回転量 → 1
   (前下 = 0) × (今下 = 1) なら
      縦移動量 → 1
   #キー状態を使い終わったので、古いのを新しいので上書き
   前左 → 今左
   前右 → 今右
   前上 → 今上
   前下 → 今下
   #落ちる
   落下カウント → 落下カウント + 1
   落下カウント = 10 なら
      縦移動量 → 1
      落下カウント → 0
   #移動を反映
   縦 → 縦 + 縦移動量
   横 → 横 + 横移動量
   回転 → 回転 + 回転量
   重なった？ -> 重なってる？(縦、横、回転、種類) 
   重なった？ なら
      #戻す
      縦 → 縦 - 縦移動量
      横 → 横 - 横移動量
      回転 → 回転 - 回転量
      (縦移動量 > 0) × (横移動量 = 0) なら
         積もらせて列を消す(縦、横、回転、種類)
         落下音()
         縦 → 1
         横 → 5
         回転 → 0
         種類 → 余り(時刻、7) #これでランダムっぽく見える
   重なった？ = 0 なら
      横移動量 != 0 なら
         移動音()
      回転量 != 0 なら
         回転音()
   四角を動かす(縦、横、回転、種類)
   時刻 → 時刻 + 1

パターンを前もって作っておく() とは
   メモリに6つ覚えさせる(500、0、-1、0、1、0、2) #形0
   メモリに6つ覚えさせる(506、-1、-1、0、-1、0、1) #形1
   メモリに6つ覚えさせる(512、0、-1、-1、0、0、1) #形2
   メモリに6つ覚えさせる(518、0、-1、-1、1、0、1) #形3
   メモリに6つ覚えさせる(524、0、-1、1、0、1、1) #形4
   メモリに6つ覚えさせる(530、0、1、1、0、1、1) #形5
   メモリに6つ覚えさせる(536、0、1、1、-1、1、0) #形6

メモリに6つ覚えさせる(開始番号、数0、数1、数2、数3、数4、数5) とは
   メモリ[開始番号 + 0] → 数0
   メモリ[開始番号 + 1] → 数1
   メモリ[開始番号 + 2] → 数2
   メモリ[開始番号 + 3] → 数3
   メモリ[開始番号 + 4] → 数4
   メモリ[開始番号 + 5] → 数5

メモリに5つ覚えさせる(開始番号、数0、数1、数2、数3、数4) とは
   メモリ[開始番号 + 0] → 数0
   メモリ[開始番号 + 1] → 数1
   メモリ[開始番号 + 2] → 数2
   メモリ[開始番号 + 3] → 数3
   メモリ[開始番号 + 4] → 数4

マス目位置を計算する(縦、横、回転、種類) とは
   メモリ[0] → 縦
   メモリ[1] → 横
   開始番号 → 500 + (種類 × 6)
   回数 → 0
   回数 < 3 なかぎり
      相対縦 → メモリ[開始番号 + (回数 × 2) + 0]
      相対横 → メモリ[開始番号 + (回数 × 2) + 1]
      回転回数 → 0
      回転回数 < 回転 なかぎり
         #入れ替え
         入れ替え用 → 相対縦
         相対縦 → 相対横
         相対横 → 入れ替え用
         #プラスマイナスひっくり返す
         相対横 → -相対横
         回転回数 → 回転回数 + 1
      メモリ[2 + (回数 × 2)] → 縦 + 相対縦
      メモリ[3 + (回数 × 2)] → 横 + 相対横
      回数 → 回数 + 1

#定数「空白」は8。8なら空いている。豪華じゃない奴は0が空白だった。
重なってる？(縦、横、回転、種類) とは
   マス目位置を計算する(縦、横、回転、種類)
   出力 → (マス目列[(メモリ[0] × 12) + メモリ[1]] ≠ 空白) + 
      (マス目列[(メモリ[2] × 12) + メモリ[3]] ≠ 空白) +
      (マス目列[(メモリ[4] × 12) + メモリ[5]] ≠ 空白) +
      (マス目列[(メモリ[6] × 12) + メモリ[7]] ≠ 空白)

積もらせて列を消す(縦、横、回転、種類) とは
   マス目位置を計算する(縦、横、回転、種類)
   積もる(メモリ[0]、メモリ[1]、種類)
   積もる(メモリ[2]、メモリ[3]、種類)
   積もる(メモリ[4]、メモリ[5]、種類)
   積もる(メモリ[6]、メモリ[7]、種類)
   列を消す()

四角を動かす(縦、横、回転、種類) とは
   マス目位置を計算する(縦、横、回転、種類)
   四角(メモリ[0]、メモリ[1]、種類) 
   四角(メモリ[2]、メモリ[3]、種類) 
   四角(メモリ[4]、メモリ[5]、種類)
   四角(メモリ[6]、メモリ[7]、種類)
   メモリ[55000] → 1 #お手紙
   四角(メモリ[0]、メモリ[1]、空白) #消す
   四角(メモリ[2]、メモリ[3]、空白) #消す
   四角(メモリ[4]、メモリ[5]、空白) #消す
   四角(メモリ[6]、メモリ[7]、空白) #消す

積もる(縦、横、種類) とは
   マス目列[(縦 × 12) + 横] → 種類
   四角(縦、横、種類)

壁と底を描く() とは
   壁を描く()
   底を描く()

壁を描く() とは
   回数 → 0
   回数 < 20 なかぎり
      積もる(回数、0、7) #左
      積もる(回数、11、7) #右
      回数 → 回数 + 1

底を描く() とは
   回数 → 0
   回数 < 10 なかぎり
      積もる(19、1 + 回数、7)
      回数 → 回数 + 1

四角(縦、横、種類) とは
   色 → メモリ[10 + 種類]
   縦回数 → 0
   縦回数 < 5 なかぎり
      横回数 → 0
      横回数 < 5 なかぎり
         画面[(縦 × 500) + (横 × 5) + 横回数 + (縦回数 × 100)] → 
            メモリ[1000 + (種類 × 25) + (縦回数 × 5) + 横回数]
         横回数 → 横回数 + 1
      縦回数 → 縦回数 + 1

列を消す() とは
   縦 → 18
   消えた列の数 → 0
   縦 ≧ 0 なかぎり
      #この列詰まってる？
      消える？ → 1
      横 → 1
      横 ≦ 10 なかぎり
         消える？ → 消える？ × (マス目列[(縦 × 12) + 横] ≠ 空白)
         横 → 横 + 1
      #/この列が今まで消えた列の数だけ下に引っ越す
      横 → 1
      横 ≦ 10 なかぎり
         マス目列[((縦 + 消えた列の数) × 12) + 横] ≠ マス目列[(縦 × 12) + 横] なら
            マス目列[((縦 + 消えた列の数) × 12) + 横] → マス目列[(縦 × 12) + 横]
            種類 → マス目列[((縦 + 消えた列の数) × 12) + 横]
            四角(縦 + 消えた列の数、横、種類)
         横 → 横 + 1
      縦 → 縦 - 1
      消えた列の数 → 消えた列の数 + 消える？
   #上に残った分を消す
   縦 → 0
   縦 < 消えた列の数 なかぎり
      横 → 1
      横 ≦ 10 なかぎり
         マス目列[(縦 × 12) + 横] ≠ 空白 なら
            マス目列[(縦 × 12) + 横] → 空白
            四角(縦、横、空白)
         横 → 横 + 1
      縦 → 縦 + 1
   #音
   消えた列の数 > 0 なら
      消去音()

余り(数、割る数) とは
   出力 → 数 - ((数 / 割る数) × 割る数)

マス目列状態を最初の状態にする() とは
   縦 → 0
   縦 < 20 なかぎり
      横 → 0
      横 < 12 なかぎり
         マス目列[(縦 × 12) + 横] → 空白
         四角(縦、横、空白)
         横 → 横 + 1
      縦 → 縦 + 1

色の表を用意する() とは
   メモリ[10] → 990000 #赤
   メモリ[11] → 9900 #緑
   メモリ[12] → 252599 #青
   メモリ[13] → 999900 #黄色
   メモリ[14] → 990099 #紫
   メモリ[15] → 9999 #水色
   メモリ[16] → 999999 #白
   メモリ[17] → 706050 #灰色
   メモリ[18] → 0 #黒

#赤緑青に分解してそれぞれ掛け算して、またくみたてる
色を掛け算する(色0、色1) とは
   赤0 → 色0 / 10000
   赤1 → 色1 / 10000
   色0 → 色0 - (赤0 × 10000)
   色1 → 色1 - (赤1 × 10000)
   緑0 → 色0 / 100
   緑1 → 色1 / 100
   色0 → 色0 - (緑0 × 100)
   色1 → 色1 - (緑1 × 100)
   青0 → 色0
   青1 → 色1
   結果 → (赤0 × 赤1 / 99) × 10000
   結果 → 結果 + ((緑0 × 緑1 / 99) × 100)
   結果 → 結果 + (青0 × 青1 / 99)
   出力 → 結果

#「元」にある25個の色と「色」を赤緑青に分解してそれぞれ掛け合わせ、
#「結果」にある25個のメモリに覚えさせる。
マス目の色を掛け算する(結果、元、色) とは
   回数 → 0
   回数 < 25 なかぎり
      結果[回数] → 色を掛け算する(元[回数]、色)
      回数 → 回数 + 1

マス目の絵を用意する() とは
   #まず白黒の5x5の絵を用意する
   メモリに5つ覚えさせる(20、707070、909090、909090、707070、303030)
   メモリに5つ覚えさせる(25、909090、808080、808080、909090、303030)
   メモリに5つ覚えさせる(30、909090、808080、808080、909090、303030)
   メモリに5つ覚えさせる(35、707070、909090、909090、707070、303030)
   メモリに5つ覚えさせる(49、303030、303030、303030、303030、202020)
   #1000番以降にマス目の絵を全部作っておく。
   マス目の色を掛け算する(1000、20、990000)
   マス目の色を掛け算する(1025、20、9900)
   マス目の色を掛け算する(1050、20、252599)
   マス目の色を掛け算する(1075、20、999900)
   マス目の色を掛け算する(1100、20、990099)
   マス目の色を掛け算する(1125、20、9999)
   マス目の色を掛け算する(1150、20、999999)
   マス目の色を掛け算する(1175、20、704010)
   マス目の色を掛け算する(1200、20、0)

移動音() とは
   メモリ[55006] → 2000
   メモリ[55009] → 100
   メモリ[55012] → 2000

回転音() とは
   メモリ[55006] → 1500
   メモリ[55009] → 40 
   メモリ[55012] → 3000

消去音() とは
   メモリ[55007] → 150
   メモリ[55008] → 250
   メモリ[55010] → 2
   メモリ[55011] → 2
   メモリ[55013] → 6000
   メモリ[55014] → 4000
   
落下音() とは
   メモリ[55006] → 125
   メモリ[55009] → 200
   メモリ[55012] → 8000
